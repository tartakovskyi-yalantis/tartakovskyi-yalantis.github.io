{"version":3,"sources":["utils.js","components/employees/Employee.jsx","components/employees/Letter.jsx","components/employees/Employees.jsx","components/birthdays/Birthday.jsx","components/birthdays/Month.jsx","components/birthdays/EmployeesBirthday.jsx","components/App.jsx","api.js","index.js"],"names":["sortByLastName","a","b","lastName","Employee","user","id","firstName","useContext","AppContext","activeUsers","changeUserStatus","useState","includes","active","setActive","cls","onChangeValue","e","value","Number","target","className","type","name","onChange","checked","Letter","letter","users","usersArr","Object","values","sort","length","map","Employees","usersByAlphabet","Birthday","dob","month","DateString","d","Date","getDate","slice","getFullYear","React","memo","Month","sortedUsers","EmployeesBirthday","usersRaw","birthdaysByMonth","setBirthdaysByMonth","monthNames","useEffect","usersObj","forEach","replace","hasOwnProperty","push","birthdaysArr","keys","createContext","App","setUsersRaw","setUsersByAlphabet","localStorage","getItem","JSON","parse","setActiveUsers","axios","get","then","response","data","alphabeObj","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","firstLetter","substr","catch","error","console","log","href","Provider","newArr","filter","userId","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb822b9.chunk.js","sourcesContent":["export const sortByLastName = (a, b) => {\n  if (a.lastName > b.lastName) {\n    return 1;\n  } else if (a.lastName < b.lastName) {\n    return -1;\n  } else return 0;\n};\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppContext } from \"../App\";\r\n\r\nconst Employee = ({ user: { id, firstName, lastName } }) => {\r\n  const { activeUsers, changeUserStatus } = useContext(AppContext);\r\n  const [active, setActive] = useState(activeUsers.includes(id) ? 1 : 0);\r\n\r\n  const cls = active === 0 ? \"employee__name\" : \"employee__name active\";\r\n\r\n  const onChangeValue = (e) => {\r\n    const value = Number(e.target.value);\r\n    setActive(value);\r\n    changeUserStatus(id, value);\r\n  };\r\n\r\n  return (\r\n    <li className=\"employee\">\r\n      <h4 className={cls}>\r\n        {firstName} {lastName}\r\n      </h4>\r\n      <form>\r\n        <label className=\"form-check\">\r\n          <input\r\n            type=\"radio\"\r\n            name={`active_${id}`}\r\n            value=\"0\"\r\n            id={`notActive_${id}`}\r\n            className=\"form-check-input\"\r\n            onChange={onChangeValue}\r\n            checked={active === 0}\r\n          />\r\n          <span className=\"form-check-label\">not active</span>\r\n        </label>\r\n        <label className=\"form-check\">\r\n          <input\r\n            type=\"radio\"\r\n            name={`active_${id}`}\r\n            value=\"1\"\r\n            id={`active_${id}`}\r\n            className=\"form-check-input\"\r\n            onChange={onChangeValue}\r\n            checked={active === 1}\r\n          />\r\n          <span className=\"form-check-label\">active</span>\r\n        </label>\r\n      </form>\r\n    </li>\r\n  );\r\n};\r\n\r\nEmployee.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    firstName: PropTypes.string.isRequired,\r\n    lastName: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Employee;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sortByLastName } from \"../../utils\";\nimport Employee from \"./Employee\";\n\nconst Letter = ({ letter, users }) => {\n  const usersArr = Object.values(users).sort(sortByLastName);\n\n  return (\n    <div className=\"col-4\">\n      <h3>{letter}</h3>\n      {usersArr.length ? (\n        <ul className=\"users-list\">\n          {usersArr.map((user) => (\n            <Employee user={user} key={user.id} />\n          ))}\n        </ul>\n      ) : (\n        <hr className=\"no-users\" />\n      )}\n    </div>\n  );\n};\n\nLetter.propTypes = {\n  letter: PropTypes.string.isRequired,\n  users: PropTypes.object.isRequired,\n};\n\nexport default Letter;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport Letter from \"./Letter\";\n\nconst Employees = () => {\n  const { usersByAlphabet } = useContext(AppContext);\n  const alphabet = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n\n  return (\n    <div className=\"col-7\">\n      <h2>Employees</h2>\n      <div className=\"row\">\n        {alphabet.map((letter) => (\n          <Letter\n            letter={letter}\n            users={usersByAlphabet[letter]}\n            key={letter}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Birthday = ({ user: { dob, firstName, lastName }, month }) => {\n  const DateString = () => {\n    const d = new Date(dob);\n    return (\"0\" + d.getDate()).slice(-2) + \" \" + month + \" \" + d.getFullYear();\n  };\n\n  return (\n    <li>\n      {firstName} {lastName} - <DateString />\n    </li>\n  );\n};\n\nBirthday.propTypes = {\n  user: PropTypes.shape({\n    dob: PropTypes.string.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n  }).isRequired,\n  month: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Birthday);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sortByLastName } from \"../../utils\";\nimport Birthday from \"./Birthday\";\n\nconst Month = ({ name, users }) => {\n  const sortedUsers = users.sort(sortByLastName);\n\n  return (\n    <li className=\"month\">\n      <h4 className=\"month__name\">{name}</h4>\n      <ul>\n        {sortedUsers.map((user) => (\n          <Birthday user={user} month={name} key={user.id} />\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nMonth.propTypes = {\n  name: PropTypes.string.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nexport default Month;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport Month from \"./Month\";\r\n\r\nconst EmployeesBirthday = () => {\r\n  const { usersRaw, activeUsers } = useContext(AppContext);\r\n  const [birthdaysByMonth, setBirthdaysByMonth] = useState({});\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let usersObj = {};\r\n    usersRaw.forEach((user) => {\r\n      if (activeUsers.includes(user.id)) {\r\n        const month = user.dob.replace(/([0-9]+)-([0-9]+)-(.*)/, \"$2\");\r\n        if (usersObj.hasOwnProperty(month)) {\r\n          usersObj[month].push(user);\r\n        } else {\r\n          usersObj[month] = [user];\r\n        }\r\n      }\r\n    });\r\n    setBirthdaysByMonth(usersObj);\r\n  }, [usersRaw, activeUsers]);\r\n\r\n  const birthdaysArr = Object.keys(birthdaysByMonth).sort();\r\n\r\n  return (\r\n    <div className=\"col-5\">\r\n      <h2>Employees Birthday</h2>\r\n      {birthdaysArr.length ? (\r\n        <ul className=\"birthdays-list\">\r\n          {birthdaysArr.map((month) => (\r\n            <Month\r\n              name={monthNames[month - 1]}\r\n              users={birthdaysByMonth[month]}\r\n              key={month}\r\n            />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Employees List is empty</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesBirthday;\r\n","import React, { useEffect, useState } from \"react\";\nimport { apiGetUsers } from \"../api\";\nimport Employees from \"./employees/Employees\";\nimport EmployeesBirthday from \"./birthdays/EmployeesBirthday\";\n\nexport const AppContext = React.createContext();\n\nconst App = () => {\n  const [usersRaw, setUsersRaw] = useState([]);\n  const [usersByAlphabet, setUsersByAlphabet] = useState({});\n  const [activeUsers, setActiveUsers] = useState(\n    localStorage.getItem(\"activeUsers\")\n      ? JSON.parse(localStorage.getItem(\"activeUsers\"))\n      : []\n  );\n\n  useEffect(() => {\n    apiGetUsers()\n      .then((response) => {\n        setUsersRaw(response.data);\n        let alphabeObj = {\n          A: {},\n          B: {},\n          C: {},\n          D: {},\n          E: {},\n          F: {},\n          G: {},\n          H: {},\n          I: {},\n          J: {},\n          K: {},\n          L: {},\n          M: {},\n          N: {},\n          O: {},\n          P: {},\n          Q: {},\n          R: {},\n          S: {},\n          T: {},\n          U: {},\n          V: {},\n          W: {},\n          X: {},\n          Y: {},\n          Z: {},\n        };\n        response.data.forEach((user) => {\n          const firstLetter = user.lastName.substr(0, 1);\n          alphabeObj[firstLetter][user.id] = user;\n        });\n        setUsersByAlphabet(alphabeObj);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const changeUserStatus = (id, active) => {\n    let newArr;\n    if (active) {\n      if (!activeUsers.includes(id)) newArr = [...activeUsers, id];\n    } else {\n      newArr = activeUsers.filter((userId) => userId !== id);\n    }\n    setActiveUsers(newArr);\n    localStorage.setItem(\"activeUsers\", JSON.stringify(newArr));\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"container\">\n          <a href=\"/\">Yalantis React.js School</a>\n        </div>\n      </header>\n      <main>\n        <div className=\"container\">\n          <div className=\"row\">\n            {Object.keys(usersByAlphabet).length ? (\n              <AppContext.Provider\n                value={{\n                  usersRaw,\n                  usersByAlphabet,\n                  activeUsers,\n                  changeUserStatus,\n                }}\n              >\n                <Employees />\n                <EmployeesBirthday />\n              </AppContext.Provider>\n            ) : null}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport const apiGetUsers = () => {\r\n  const url = `https://yalantis-react-school-api.yalantis.com/api/task0/users`;\r\n  return axios.get(url);\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./scss/app.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}